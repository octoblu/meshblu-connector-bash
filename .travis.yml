branches:
  only:
  - "/^v[0-9]/"
env:
  global:
  - secure: D+XeKY2EpYPnK665xlRMjZJpnRMPSPUb65EAstwVNwcewULLSOzg8ZlhL8+iFsFCiKPZWinnryGj7QcwGBXj3/XS6KSpCGqgS1hiSivzGURfZ0Eg3SpkwWP2TXixTqRYfQTRJuniRRlrJ+d2rnGnEPVjgbc+aS+TyrCI0HcxalSL1GmKnP7JGQOyKxtn7D8haw4ubUwRvw/XrvaYOk54JN7K6J8UlfuLNJBnUphRMPbHTgIQYJU0tGFeuuC2CsdDQI01f/mPjhTku26sfRi+S9fIVfAJjHo4AgQ3HmYF4ZEKyFFiNF9Fp5yIDyYC7QYZOWQIzRpVRngubQvqIQbzUhf1SbmN1YNU1bdXKdC2RkIvJhoKKZZXav2O38v/R5KQzlPQISy/Su/WiNL8J8qm891JSIMu6VYJkKjBsXuIVGceq2LK/z/Nd4ctdkx2QOVwpc6hD9dt3diUV2dSb+XZQwNtVApJcI++NnyfNrUmQZQGjdk0tLphmGYvvMcb2vqVGVkoxxPmPaAh+kI6EqPzYmFJnNrrMUzWgIBeqjSyimupk6H8pVl2i4eoYryMYYExlZkHQydBd0hhDHr9dQmYj4Hml/NZsbm6/NiwijAJ6HOCMUP6bVGHXOacBAOF7+qSfVykopuz0SEKODhsOmsF203hIz7NZ92VqyQlt8JJ92g=
  - secure: jwQc8jAwjxw1wzZHccw/lL0cbwgueMvuQzhirV298VHj0lIy+Vd533wXJY91owLJqYVbm3lJrCeLDaQ5Vbm0gGGT4aaNhbnNv5CnPXuarglgQocw78KDJSlmOpZiLcBHCt4B1XaG2lyTk7N5tBLzHX4cY2sBdd4xDShfWD+MMRMv5E0JtuPO5geYtA0bLj0zTDH7OFH7zPTH8dupOUyMEwtSUuxWUFPiFkdHcNtdGKM4lHmPN6F8ixq8FbUiFMx3zM8PstFw+HL4H8fmwsnSWB74HjoxfIGjpZidWnNU466B8jcv8vN3Y+4CzbF/cKpRLt2uEGiTVLN6O795WBbzVnfnsyZRlR3AYpQPSy2PL9v67MD/rq8EsXDBRhS4FMYIMg+YCIZrosWxQSbrWbqZQ168I4VCziv67t3bWUcPewebVp3xJDPvuhowOYaUfrh69eNnhFi5D7GRrH7HxbPyOfVnIyJebbiD/PfirMaLKu3ZJJ9K+vVIrIaHdU+3yg/ZTTbEeWZEnaMTGSTh42kU1QR6jHxcIWOPM4bBVcFsqTbtHMiJT+phmDLGDWGmqyuE1rAOQJ1Rd9+v/BWOmuV9VKkVVTPC84S2MXot6jIH15wwMviIpq8eW+jNhT4Cs+Be4+Xv0B2I89Mzzh+UxONq/I/KltYf0yUEdXtZUQJT9Rk=
  - secure: EhP6RxTCT8Y9cPAkf9ulV/7mPF9AWJDl8xlrzLO5Q7A+8Y7CdwhCsDeKxmvUiemugQbhgpF6al6krDQl7UOi8rUAr5pskSjP0YSKYy12QHvovfsBTplTLIQVlm0rurx25ZjYrlF6xxdl4/vdtouh+8xn35wjty71aU5aqRLZ2xyxiKSYQgv0897EMBLolaKJe0/SYc+TWAQo9MC7cCs4Zh0InQK0Uz6QXcVdLOt6MT/+2ScJUgjcyI57RxQ00CDdfbzbrVM0o0mqMH2w8Ukc9xvOQgQzAdbhtkTw3hLte+93qB8FlEACVqFfu7zhVtuXEEYsqzhkl+MqjvkMs1yxcYUh+cPuoiHNHM4O8UO9jH15e1AOazB9Lx4xwWEqstPemIyasBJ+hwDNtA6RD0nLeM0icocSmWTagCnkU4hsVOvpPDDuW/jeLzu6ZgkEKeeIXLLb0gAT/NXX1E4HQKA3Hd676BUHGLRT1OHGat9PjzPcQOpHipkV8zajpgay0/m4PlNbPuyUufrOSr7M8z0Ybu/lyNBzb0SpgwA9OSdNvoxAZXy0L2und+NnJNgASuqXfM1CrGQgLboFxdlj3QGZx5Jk5eLzzsKX/gtUuwRotKvGelxLrrYuCZQGXajk/DVUN+6rYfDFZ4zzM8RoxHhdnpJgyAIxk6QwsLySrZl2IUg=
  - secure: h/l+V84MIHsRBepcw8uLq71/tkMAKFDI88fUPnKk829W3jtZjhrtsGCqL6GByplvc+vSHN4aieoWxFCtBXz3fZNfA6WxljoG9dgTU+KY002Aohfg5AF3OYBTXlb0sxSe81bmua3hnp1L3dP6+0bo585RnN9Pj79dDhuFisbg7G8EblXq7xR19+rEGfVaeJq0amrrnlyyqvRmC9KgEKrx6DC6YJJk/N9U8PUy4vgcCSbgPwoYAEh54pwiJyl7wZ9KUGESJ5n5su4F3qLc6DAcuInHUMI1ywBO7Ydzn+wcu0kBZEVmTXeXl0N0iezv0yuU5zzIT9f/v/8hSDMIUwMwgUybY9mZVR6Rdj+YJ3oT7iMLmdOAtn2T+MBnflsio9qT3UKa+Q7igy3mbFP3okZ5kg5QF4VdEniXthPjuKgd2n7GmuRgpCc9yKT5ZMRIFyV9yV6+HrRt5v53QtO5Z1qIYGQ2+UXqTgjNb1wZ8s5OhNk/AZPtDhRX3PNDvbxb44qbyyGIzowQcC3eOe6QHxSSRVbR8uhburj9FwYH5nXpTa4EHwnDPzrtAvB6HOYoo2xOBu6K/FaQbeYYyBbMVqI5nD42sh0YNUVOAVKkum00bAnUCfcz4TYMPsDO5+HodzQo/osTNfMQMbx6G5HiOmDPA3MwYNK15dJWb/1CfJWTTE0=
  - secure: m95ogkBujRbl0+scUfLs3gYqU0+5bMz3pmiLO58P/Ex/0WZAMLjfhzNZgBsCTCli/9fUPrUK4dZkW6ng/3At2CMXVKfBq19mrh4gqUajsq2d+zlXl/hVUOlxVe9/1D1zZAZ+rGzeMfuCKFYYRRMW9oi5AMBgtOlp+sj6zfepiBrRXMkTo9JrXy8OlEckHvCg1E7trm/3RjuAykYW2ANbZbvH3WF6R6sbkTdOxn2QaeVZuIVdhgHrJb++4+Z+UOVyYFoYW592G0HhW7xN7PJv6gBjUpBp5MAWNfyoLqqA8HHYxlgeHyirTZAxWuARAIARLi3eha0UIvu4fJC9EgyHca/70qBK//eW+wIxey2QG9XA2PClO/rgXDPLsy/9akAFVAAQv9+9h/dkWvMZGvVOum9jE4sK+/c4qqJEkxoBsc+Jul6o/wGl6E/m+HfBlgvlCrjfTmNeLtRzGsQC3tOEfOiUA5iTS9JJbmihDxYVAIhFCZEjGrW1j8YAJTYAIkBa6OhrbaKYu7IlBKTRTFzkwoMnqsLgqW0XZUUgK5RCziM6QElCPtxQQ+u/KxgoI/eQq0N3t6gpkysEwOEKXCLFfUJ5dK7Vudn1QZXTHDS7jVsK4VuAv1l5yOVjI5b7i94WUXqn2zPwY4rMk3IdRWeN4m+ReiZFjJf5FCMPBEDve7I=
  - secure: g5mCWAVC6PPzREF7nneQxQj6HYzAEdobsRePKNkDXdRLstDV/6H49omYA4qF24g/TxU0852eEdCeeRDVFJnKaMHcsBCR8hrd+P9gZ7t9rfAAEvv5VBtzbPsoMt43+HJiK5QFRdShtX4htBIaJ8/F5MvFmjdP3ey9zgeWSiVNXpuuejCEbKjTmCgYSj7FAnlyncES1A4lsNWmmBzFU/De2Idjbf38L95AiHvDcLrkkbx54PY3yORC7y3mmMWnbS5HHIFKNqoQDL4ykfGEKa0wFldsYdIqnk4dZDZ1z5DcZI8pRaeDNva68jcCuJ/0LGrfguV89X9wOy0mGv7xxdcO4Uicat3hvYvD5KA7pD6DBVQ2zQOC8IiPeCK5UHqZ13oCbHMhEkN+eZikl9rRiAy+C+jJu9Oaco9K/qWl1lKFhD76C/VcLuu5GQnFNuLThJ7mMJ1jb6Iujqq4DigrNdmA8cIHHDNQ9D3sX9hxhB8dkI2EFFD0WypmhhVTaFhlzIRKBLZakug5jWhKXG2uOsr3nY0lqMRV7qQLXB1zPM7lA+M5gr03YlqAxotkDJXh9lrnWJgXbbjW1QGWyXbM4cFHGVjyz8hfSxgJtG2VvrZYRG06GtiAgf8IjaPCzrd/1pdFwMX/X2TY2pvwqIXhqKxhW+sOZSmjrwZtoAUCQJ/AHVk=
  - secure: f+Uiw/vCCc3uPNqtfzzec4GC2RoLL8RmRJBImZs1G8nlZZrQ1MElhY38UwMNFqcWPCB4j4xAFtCPvCjjM1vzj9tAA9uoIdgjza3/QZ+Se5TGUEA/ukzJaqCuJBsDmuuHruS3XAC7jkQ1KH3J2fi7k1ciJ1uqBqXJIw12Y+qTHtSlTDhVy4sxHsshwat6sliIrtxgfpYCUwSOa8akXqsG7ycNd8q4eg3/j61rUKI1pWv6JxtrCP/B7m9snTAVmfd34Fas2QGiyvJsY/pRkv0qUcj7dElJbW5szB5AY2Z9Fhty2gmyUp7F9p5vvsNDMApbUv/2ZZZo4l/o9QWjvCjQp+SGjE7tRJxX8m82bFUAGmKltsZuA3O2pqy9dNSRa/mOzCG314QgDIcjef/e1lO2NCA1dcXXfgftui56Gqt15/xBabx7Lu+6Zo3szorjrt/19qE/1k6CZ4Mif98t1TpSJOAlse6tbO1vNghufZN/Om5P+myw2ZJespApfOJOtSfdw3m+Lt0KOlNeakmJMmtjF9vhdFIEaEsT/WPMb3oyPW7YHdeFQ2R2SS16MKgm6aMrg8NlIPQwF5CFs735jor7cKY9pHBU5JiZ03LZl83T7x+VTSRi93cGGbUpZ4+L3xV1s5oyoh97BqL56JsvgwiGhmtMvGNHp3LJzDRMLt+bExI=
  - secure: U+d92No3atxu+EMC39b68aFjMkdhW9fQ/cI6uw3TnBmZiEmybKWjObqAWemxH8mc1TtX0GAOKvQE8Ec6kvxB5F8LUO3thZUblrLqFbALoOhp5SKq5rhDOWjGTgHUYvMhsT1ZzTm1cra7wa1BReR3APgJ33QRuvBUsZWd+fIYFWtuycF2pzqP5AKN4nizO5gv3ercpHlXB1sBz+RXKi1lPV87J1NBu1/YlnQP47LVCP5dxBNF5DHu6KOAJTry5CefW3MWREqsc3sZVnmBhMD/tdVdO7cO4gzB7wczf/3Z9Gy7U0j1nsFetXEnpn0SyT5HvJf/4679l7uVAp0oEV70A9ADlCpRm3UNIOTtKVGjLzNAEq0zMQUDr9XTVBKgRg00yWnVtnaEnV+30CemQSN6vA5jMFu6tzVve7jgNOwzpCBUaetLwKykpEItGWKGfVr8ZV4MbIYaIdgt7aFBBveJSRFQj/QXSNRQiM0er9JgRTDJWUp5DPUy/1IFLia0ksqSOfnTonytN0c2o7oqjjHeSgF0xD2c152w18IanALqgud8PuIuiH+uyBtNCWPMnhiQ0a6Yd3nQwDSWor64q0jusQ7It+Zc6kB/12MZQPvG0Kxnb+gigb7C69EF/LlHSkdpEOabK0wE4OsEVOlOUKKKL5LgGgIVsUa7qSYN2AGgeao=
matrix:
  fast_finish: true
  include:
  - os: linux
    language: node_js
    node_js: '8'
    after_success:
    - yarn global add meshblu-connector-schema-generator meshblu-connector-uploader-github
    - mkdir -p ./deploy/assets
    - meshblu-connector-schema-generator > ./deploy/assets/schemas.json
    - meshblu-connector-uploader-github --installers-path ./deploy/assets
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-armv7
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-armv7 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x86
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x86 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x64
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x64 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: osx
    node_js: '8'
    language: node_js
    after_success:
    - yarn global add meshblu-connector-pkger meshblu-connector-installer-macos meshblu-connector-uploader-github
    - meshblu-connector-pkger && meshblu-connector-installer-macos && meshblu-connector-uploader-github
